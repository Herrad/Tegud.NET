//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_Blog_Category", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TegudData.Category), "Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.Blog), true)]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_Blog_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TegudData.Location), "Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.Blog), true)]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_Blog_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TegudData.User), "Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.Blog), true)]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_Comment_Blog", "Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TegudData.Blog), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.Comment), true)]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "BlogTag", "Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.Blog), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.Tag))]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_Blog_Site", "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TegudData.Site), "Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.Blog), true)]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_User_Site", "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TegudData.Site), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.User), true)]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_Blog_BlogSeries", "BlogSery", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TegudData.BlogSeries), "Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.Blog), true)]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_BlogSeriesBlog_Blog", "Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TegudData.Blog), "BlogSeriesBlog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.BlogSeriesBlog), true)]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_BlogSeriesBlog_BlogSeries", "BlogSery", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TegudData.BlogSeries), "BlogSeriesBlog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.BlogSeriesBlog), true)]
[assembly: EdmRelationshipAttribute("SQL2008_615903_tegudModel", "FK_BlogSeriesPlaceholder_BlogSeries", "BlogSery", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TegudData.BlogSeries), "BlogSeriesPlaceholder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TegudData.BlogSeriesPlaceholder), true)]

#endregion

namespace TegudData
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SQL2008_615903_tegudEntities9 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SQL2008_615903_tegudEntities9 object using the connection string found in the 'SQL2008_615903_tegudEntities9' section of the application configuration file.
        /// </summary>
        public SQL2008_615903_tegudEntities9() : base("name=SQL2008_615903_tegudEntities9", "SQL2008_615903_tegudEntities9")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SQL2008_615903_tegudEntities9 object.
        /// </summary>
        public SQL2008_615903_tegudEntities9(string connectionString) : base(connectionString, "SQL2008_615903_tegudEntities9")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SQL2008_615903_tegudEntities9 object.
        /// </summary>
        public SQL2008_615903_tegudEntities9(EntityConnection connection) : base(connection, "SQL2008_615903_tegudEntities9")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Blog> Blogs
        {
            get
            {
                if ((_Blogs == null))
                {
                    _Blogs = base.CreateObjectSet<Blog>("Blogs");
                }
                return _Blogs;
            }
        }
        private ObjectSet<Blog> _Blogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhotoStore> PhotoStores
        {
            get
            {
                if ((_PhotoStores == null))
                {
                    _PhotoStores = base.CreateObjectSet<PhotoStore>("PhotoStores");
                }
                return _PhotoStores;
            }
        }
        private ObjectSet<PhotoStore> _PhotoStores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FrontPageHeader> FrontPageHeaders
        {
            get
            {
                if ((_FrontPageHeaders == null))
                {
                    _FrontPageHeaders = base.CreateObjectSet<FrontPageHeader>("FrontPageHeaders");
                }
                return _FrontPageHeaders;
            }
        }
        private ObjectSet<FrontPageHeader> _FrontPageHeaders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Site> Sites
        {
            get
            {
                if ((_Sites == null))
                {
                    _Sites = base.CreateObjectSet<Site>("Sites");
                }
                return _Sites;
            }
        }
        private ObjectSet<Site> _Sites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogSeries> BlogSeries1
        {
            get
            {
                if ((_BlogSeries1 == null))
                {
                    _BlogSeries1 = base.CreateObjectSet<BlogSeries>("BlogSeries1");
                }
                return _BlogSeries1;
            }
        }
        private ObjectSet<BlogSeries> _BlogSeries1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogSeriesBlog> BlogSeriesBlogs
        {
            get
            {
                if ((_BlogSeriesBlogs == null))
                {
                    _BlogSeriesBlogs = base.CreateObjectSet<BlogSeriesBlog>("BlogSeriesBlogs");
                }
                return _BlogSeriesBlogs;
            }
        }
        private ObjectSet<BlogSeriesBlog> _BlogSeriesBlogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogSeriesPlaceholder> BlogSeriesPlaceholders
        {
            get
            {
                if ((_BlogSeriesPlaceholders == null))
                {
                    _BlogSeriesPlaceholders = base.CreateObjectSet<BlogSeriesPlaceholder>("BlogSeriesPlaceholders");
                }
                return _BlogSeriesPlaceholders;
            }
        }
        private ObjectSet<BlogSeriesPlaceholder> _BlogSeriesPlaceholders;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Blogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogs(Blog blog)
        {
            base.AddObject("Blogs", blog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhotoStores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotoStores(PhotoStore photoStore)
        {
            base.AddObject("PhotoStores", photoStore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FrontPageHeaders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFrontPageHeaders(FrontPageHeader frontPageHeader)
        {
            base.AddObject("FrontPageHeaders", frontPageHeader);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSites(Site site)
        {
            base.AddObject("Sites", site);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogSeries1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogSeries1(BlogSeries blogSeries)
        {
            base.AddObject("BlogSeries1", blogSeries);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogSeriesBlogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogSeriesBlogs(BlogSeriesBlog blogSeriesBlog)
        {
            base.AddObject("BlogSeriesBlogs", blogSeriesBlog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogSeriesPlaceholders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogSeriesPlaceholders(BlogSeriesPlaceholder blogSeriesPlaceholder)
        {
            base.AddObject("BlogSeriesPlaceholders", blogSeriesPlaceholder);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="Blog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Blog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Blog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="siteID">Initial value of the SiteID property.</param>
        /// <param name="authorID">Initial value of the AuthorID property.</param>
        /// <param name="postedAt">Initial value of the PostedAt property.</param>
        /// <param name="commentCount">Initial value of the CommentCount property.</param>
        public static Blog CreateBlog(global::System.Int32 id, global::System.Int32 siteID, global::System.Int32 authorID, global::System.DateTime postedAt, global::System.Int32 commentCount)
        {
            Blog blog = new Blog();
            blog.ID = id;
            blog.SiteID = siteID;
            blog.AuthorID = authorID;
            blog.PostedAt = postedAt;
            blog.CommentCount = commentCount;
            return blog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteID
        {
            get
            {
                return _SiteID;
            }
            set
            {
                OnSiteIDChanging(value);
                ReportPropertyChanging("SiteID");
                _SiteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteID");
                OnSiteIDChanged();
            }
        }
        private global::System.Int32 _SiteID;
        partial void OnSiteIDChanging(global::System.Int32 value);
        partial void OnSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorID
        {
            get
            {
                return _AuthorID;
            }
            set
            {
                OnAuthorIDChanging(value);
                ReportPropertyChanging("AuthorID");
                _AuthorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorID");
                OnAuthorIDChanged();
            }
        }
        private global::System.Int32 _AuthorID;
        partial void OnAuthorIDChanging(global::System.Int32 value);
        partial void OnAuthorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostedAt
        {
            get
            {
                return _PostedAt;
            }
            set
            {
                OnPostedAtChanging(value);
                ReportPropertyChanging("PostedAt");
                _PostedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedAt");
                OnPostedAtChanged();
            }
        }
        private global::System.DateTime _PostedAt;
        partial void OnPostedAtChanging(global::System.DateTime value);
        partial void OnPostedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedAt
        {
            get
            {
                return _UpdatedAt;
            }
            set
            {
                OnUpdatedAtChanging(value);
                ReportPropertyChanging("UpdatedAt");
                _UpdatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedAt");
                OnUpdatedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedAt;
        partial void OnUpdatedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentCount
        {
            get
            {
                return _CommentCount;
            }
            set
            {
                OnCommentCountChanging(value);
                ReportPropertyChanging("CommentCount");
                _CommentCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentCount");
                OnCommentCountChanged();
            }
        }
        private global::System.Int32 _CommentCount;
        partial void OnCommentCountChanging(global::System.Int32 value);
        partial void OnCommentCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationID;
        partial void OnLocationIDChanging(Nullable<global::System.Int32> value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BlogSeriesID
        {
            get
            {
                return _BlogSeriesID;
            }
            set
            {
                OnBlogSeriesIDChanging(value);
                ReportPropertyChanging("BlogSeriesID");
                _BlogSeriesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogSeriesID");
                OnBlogSeriesIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BlogSeriesID;
        partial void OnBlogSeriesIDChanging(Nullable<global::System.Int32> value);
        partial void OnBlogSeriesIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_Category", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SQL2008_615903_tegudModel.FK_Blog_Category", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SQL2008_615903_tegudModel.FK_Blog_Category", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SQL2008_615903_tegudModel.FK_Blog_Category", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("SQL2008_615903_tegudModel.FK_Blog_Category", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("SQL2008_615903_tegudModel.FK_Blog_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("SQL2008_615903_tegudModel.FK_Blog_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("SQL2008_615903_tegudModel.FK_Blog_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("SQL2008_615903_tegudModel.FK_Blog_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQL2008_615903_tegudModel.FK_Blog_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQL2008_615903_tegudModel.FK_Blog_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQL2008_615903_tegudModel.FK_Blog_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SQL2008_615903_tegudModel.FK_Blog_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Comment_Blog", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("SQL2008_615903_tegudModel.FK_Comment_Blog", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("SQL2008_615903_tegudModel.FK_Comment_Blog", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "BlogTag", "Tag")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("SQL2008_615903_tegudModel.BlogTag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("SQL2008_615903_tegudModel.BlogTag", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_Site", "Site")]
        public Site Site
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("SQL2008_615903_tegudModel.FK_Blog_Site", "Site").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("SQL2008_615903_tegudModel.FK_Blog_Site", "Site").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Site> SiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("SQL2008_615903_tegudModel.FK_Blog_Site", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Site>("SQL2008_615903_tegudModel.FK_Blog_Site", "Site", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_BlogSeries", "BlogSery")]
        public BlogSeries BlogSeries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_Blog_BlogSeries", "BlogSery").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_Blog_BlogSeries", "BlogSery").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogSeries> BlogSeriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_Blog_BlogSeries", "BlogSery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_Blog_BlogSeries", "BlogSery", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_BlogSeriesBlog_Blog", "BlogSeriesBlog")]
        public EntityCollection<BlogSeriesBlog> BlogSeriesBlogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogSeriesBlog>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_Blog", "BlogSeriesBlog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogSeriesBlog>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_Blog", "BlogSeriesBlog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="BlogSeries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogSeries : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogSeries object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static BlogSeries CreateBlogSeries(global::System.Int32 id)
        {
            BlogSeries blogSeries = new BlogSeries();
            blogSeries.ID = id;
            return blogSeries;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_BlogSeries", "Blog")]
        public EntityCollection<Blog> Blogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_BlogSeries", "Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_BlogSeries", "Blog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_BlogSeriesBlog_BlogSeries", "BlogSeriesBlog")]
        public EntityCollection<BlogSeriesBlog> BlogSeriesBlogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogSeriesBlog>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_BlogSeries", "BlogSeriesBlog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogSeriesBlog>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_BlogSeries", "BlogSeriesBlog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_BlogSeriesPlaceholder_BlogSeries", "BlogSeriesPlaceholder")]
        public EntityCollection<BlogSeriesPlaceholder> BlogSeriesPlaceholders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogSeriesPlaceholder>("SQL2008_615903_tegudModel.FK_BlogSeriesPlaceholder_BlogSeries", "BlogSeriesPlaceholder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogSeriesPlaceholder>("SQL2008_615903_tegudModel.FK_BlogSeriesPlaceholder_BlogSeries", "BlogSeriesPlaceholder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="BlogSeriesBlog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogSeriesBlog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogSeriesBlog object.
        /// </summary>
        /// <param name="blogSeriesID">Initial value of the BlogSeriesID property.</param>
        /// <param name="blogID">Initial value of the BlogID property.</param>
        /// <param name="part">Initial value of the Part property.</param>
        public static BlogSeriesBlog CreateBlogSeriesBlog(global::System.Int32 blogSeriesID, global::System.Int32 blogID, global::System.Int32 part)
        {
            BlogSeriesBlog blogSeriesBlog = new BlogSeriesBlog();
            blogSeriesBlog.BlogSeriesID = blogSeriesID;
            blogSeriesBlog.BlogID = blogID;
            blogSeriesBlog.Part = part;
            return blogSeriesBlog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogSeriesID
        {
            get
            {
                return _BlogSeriesID;
            }
            set
            {
                if (_BlogSeriesID != value)
                {
                    OnBlogSeriesIDChanging(value);
                    ReportPropertyChanging("BlogSeriesID");
                    _BlogSeriesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogSeriesID");
                    OnBlogSeriesIDChanged();
                }
            }
        }
        private global::System.Int32 _BlogSeriesID;
        partial void OnBlogSeriesIDChanging(global::System.Int32 value);
        partial void OnBlogSeriesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogID
        {
            get
            {
                return _BlogID;
            }
            set
            {
                if (_BlogID != value)
                {
                    OnBlogIDChanging(value);
                    ReportPropertyChanging("BlogID");
                    _BlogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogID");
                    OnBlogIDChanged();
                }
            }
        }
        private global::System.Int32 _BlogID;
        partial void OnBlogIDChanging(global::System.Int32 value);
        partial void OnBlogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Part
        {
            get
            {
                return _Part;
            }
            set
            {
                OnPartChanging(value);
                ReportPropertyChanging("Part");
                _Part = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Part");
                OnPartChanged();
            }
        }
        private global::System.Int32 _Part;
        partial void OnPartChanging(global::System.Int32 value);
        partial void OnPartChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_BlogSeriesBlog_Blog", "Blog")]
        public Blog Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blog>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_Blog", "Blog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blog>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_Blog", "Blog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Blog> BlogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blog>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_Blog", "Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Blog>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_Blog", "Blog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_BlogSeriesBlog_BlogSeries", "BlogSery")]
        public BlogSeries BlogSery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_BlogSeries", "BlogSery").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_BlogSeries", "BlogSery").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogSeries> BlogSeryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_BlogSeries", "BlogSery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_BlogSeriesBlog_BlogSeries", "BlogSery", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="BlogSeriesPlaceholder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogSeriesPlaceholder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogSeriesPlaceholder object.
        /// </summary>
        /// <param name="blogSeriesID">Initial value of the BlogSeriesID property.</param>
        /// <param name="part">Initial value of the Part property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BlogSeriesPlaceholder CreateBlogSeriesPlaceholder(global::System.Int32 blogSeriesID, global::System.Int32 part, global::System.String name)
        {
            BlogSeriesPlaceholder blogSeriesPlaceholder = new BlogSeriesPlaceholder();
            blogSeriesPlaceholder.BlogSeriesID = blogSeriesID;
            blogSeriesPlaceholder.Part = part;
            blogSeriesPlaceholder.Name = name;
            return blogSeriesPlaceholder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogSeriesID
        {
            get
            {
                return _BlogSeriesID;
            }
            set
            {
                if (_BlogSeriesID != value)
                {
                    OnBlogSeriesIDChanging(value);
                    ReportPropertyChanging("BlogSeriesID");
                    _BlogSeriesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogSeriesID");
                    OnBlogSeriesIDChanged();
                }
            }
        }
        private global::System.Int32 _BlogSeriesID;
        partial void OnBlogSeriesIDChanging(global::System.Int32 value);
        partial void OnBlogSeriesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Part
        {
            get
            {
                return _Part;
            }
            set
            {
                if (_Part != value)
                {
                    OnPartChanging(value);
                    ReportPropertyChanging("Part");
                    _Part = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Part");
                    OnPartChanged();
                }
            }
        }
        private global::System.Int32 _Part;
        partial void OnPartChanging(global::System.Int32 value);
        partial void OnPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_BlogSeriesPlaceholder_BlogSeries", "BlogSery")]
        public BlogSeries BlogSery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_BlogSeriesPlaceholder_BlogSeries", "BlogSery").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_BlogSeriesPlaceholder_BlogSeries", "BlogSery").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogSeries> BlogSeryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_BlogSeriesPlaceholder_BlogSeries", "BlogSery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogSeries>("SQL2008_615903_tegudModel.FK_BlogSeriesPlaceholder_BlogSeries", "BlogSery", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Categories object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.ID = id;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_Category", "Blog")]
        public EntityCollection<Blog> Blogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_Category", "Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_Category", "Blog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="blogID">Initial value of the BlogID property.</param>
        /// <param name="authorName">Initial value of the AuthorName property.</param>
        /// <param name="authorEmail">Initial value of the AuthorEmail property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="postedAt">Initial value of the PostedAt property.</param>
        /// <param name="isSiteAdmin">Initial value of the IsSiteAdmin property.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.Int32 blogID, global::System.String authorName, global::System.String authorEmail, global::System.String text, global::System.DateTime postedAt, global::System.Boolean isSiteAdmin)
        {
            Comment comment = new Comment();
            comment.ID = id;
            comment.BlogID = blogID;
            comment.AuthorName = authorName;
            comment.AuthorEmail = authorEmail;
            comment.Text = text;
            comment.PostedAt = postedAt;
            comment.IsSiteAdmin = isSiteAdmin;
            return comment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogID
        {
            get
            {
                return _BlogID;
            }
            set
            {
                OnBlogIDChanging(value);
                ReportPropertyChanging("BlogID");
                _BlogID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogID");
                OnBlogIDChanged();
            }
        }
        private global::System.Int32 _BlogID;
        partial void OnBlogIDChanging(global::System.Int32 value);
        partial void OnBlogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthorName
        {
            get
            {
                return _AuthorName;
            }
            set
            {
                OnAuthorNameChanging(value);
                ReportPropertyChanging("AuthorName");
                _AuthorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthorName");
                OnAuthorNameChanged();
            }
        }
        private global::System.String _AuthorName;
        partial void OnAuthorNameChanging(global::System.String value);
        partial void OnAuthorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthorEmail
        {
            get
            {
                return _AuthorEmail;
            }
            set
            {
                OnAuthorEmailChanging(value);
                ReportPropertyChanging("AuthorEmail");
                _AuthorEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthorEmail");
                OnAuthorEmailChanged();
            }
        }
        private global::System.String _AuthorEmail;
        partial void OnAuthorEmailChanging(global::System.String value);
        partial void OnAuthorEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostedAt
        {
            get
            {
                return _PostedAt;
            }
            set
            {
                OnPostedAtChanging(value);
                ReportPropertyChanging("PostedAt");
                _PostedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedAt");
                OnPostedAtChanged();
            }
        }
        private global::System.DateTime _PostedAt;
        partial void OnPostedAtChanging(global::System.DateTime value);
        partial void OnPostedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSiteAdmin
        {
            get
            {
                return _IsSiteAdmin;
            }
            set
            {
                OnIsSiteAdminChanging(value);
                ReportPropertyChanging("IsSiteAdmin");
                _IsSiteAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSiteAdmin");
                OnIsSiteAdminChanged();
            }
        }
        private global::System.Boolean _IsSiteAdmin;
        partial void OnIsSiteAdminChanging(global::System.Boolean value);
        partial void OnIsSiteAdminChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Comment_Blog", "Blog")]
        public Blog Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blog>("SQL2008_615903_tegudModel.FK_Comment_Blog", "Blog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blog>("SQL2008_615903_tegudModel.FK_Comment_Blog", "Blog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Blog> BlogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blog>("SQL2008_615903_tegudModel.FK_Comment_Blog", "Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Blog>("SQL2008_615903_tegudModel.FK_Comment_Blog", "Blog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="FrontPageHeader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FrontPageHeader : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FrontPageHeader object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="alwaysShowInfo">Initial value of the AlwaysShowInfo property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static FrontPageHeader CreateFrontPageHeader(global::System.Int32 id, global::System.String image, global::System.Boolean alwaysShowInfo, global::System.Boolean active)
        {
            FrontPageHeader frontPageHeader = new FrontPageHeader();
            frontPageHeader.ID = id;
            frontPageHeader.Image = image;
            frontPageHeader.AlwaysShowInfo = alwaysShowInfo;
            frontPageHeader.Active = active;
            return frontPageHeader;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AlwaysShowInfo
        {
            get
            {
                return _AlwaysShowInfo;
            }
            set
            {
                OnAlwaysShowInfoChanging(value);
                ReportPropertyChanging("AlwaysShowInfo");
                _AlwaysShowInfo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlwaysShowInfo");
                OnAlwaysShowInfoChanged();
            }
        }
        private global::System.Boolean _AlwaysShowInfo;
        partial void OnAlwaysShowInfoChanging(global::System.Boolean value);
        partial void OnAlwaysShowInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TargetURL
        {
            get
            {
                return _TargetURL;
            }
            set
            {
                OnTargetURLChanging(value);
                ReportPropertyChanging("TargetURL");
                _TargetURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TargetURL");
                OnTargetURLChanged();
            }
        }
        private global::System.String _TargetURL;
        partial void OnTargetURLChanging(global::System.String value);
        partial void OnTargetURLChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="public">Initial value of the Public property.</param>
        public static Location CreateLocation(global::System.Int32 id, global::System.String name, global::System.Boolean @public)
        {
            Location location = new Location();
            location.ID = id;
            location.Name = name;
            location.Public = @public;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Public
        {
            get
            {
                return _Public;
            }
            set
            {
                OnPublicChanging(value);
                ReportPropertyChanging("Public");
                _Public = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Public");
                OnPublicChanged();
            }
        }
        private global::System.Boolean _Public;
        partial void OnPublicChanging(global::System.Boolean value);
        partial void OnPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLatitudeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_Location", "Blog")]
        public EntityCollection<Blog> Blogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_Location", "Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_Location", "Blog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="PhotoStore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhotoStore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhotoStore object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="directory">Initial value of the Directory property.</param>
        public static PhotoStore CreatePhotoStore(global::System.Int32 id, global::System.String name, global::System.String directory)
        {
            PhotoStore photoStore = new PhotoStore();
            photoStore.ID = id;
            photoStore.Name = name;
            photoStore.Directory = directory;
            return photoStore;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Directory
        {
            get
            {
                return _Directory;
            }
            set
            {
                OnDirectoryChanging(value);
                ReportPropertyChanging("Directory");
                _Directory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Directory");
                OnDirectoryChanged();
            }
        }
        private global::System.String _Directory;
        partial void OnDirectoryChanging(global::System.String value);
        partial void OnDirectoryChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="Site")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Site : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Site object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Site CreateSite(global::System.Int32 id, global::System.String name)
        {
            Site site = new Site();
            site.ID = id;
            site.Name = name;
            return site;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_Site", "Blog")]
        public EntityCollection<Blog> Blogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_Site", "Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_Site", "Blog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_User_Site", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SQL2008_615903_tegudModel.FK_User_Site", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SQL2008_615903_tegudModel.FK_User_Site", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.String name)
        {
            Tag tag = new Tag();
            tag.ID = id;
            tag.Name = name;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "BlogTag", "Blog")]
        public EntityCollection<Blog> Blogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blog>("SQL2008_615903_tegudModel.BlogTag", "Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blog>("SQL2008_615903_tegudModel.BlogTag", "Blog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQL2008_615903_tegudModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="defaultSiteID">Initial value of the DefaultSiteID property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String password, global::System.Int32 defaultSiteID)
        {
            User user = new User();
            user.ID = id;
            user.Username = username;
            user.Password = password;
            user.DefaultSiteID = defaultSiteID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PIN
        {
            get
            {
                return _PIN;
            }
            set
            {
                OnPINChanging(value);
                ReportPropertyChanging("PIN");
                _PIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PIN");
                OnPINChanged();
            }
        }
        private global::System.String _PIN;
        partial void OnPINChanging(global::System.String value);
        partial void OnPINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefaultSiteID
        {
            get
            {
                return _DefaultSiteID;
            }
            set
            {
                OnDefaultSiteIDChanging(value);
                ReportPropertyChanging("DefaultSiteID");
                _DefaultSiteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultSiteID");
                OnDefaultSiteIDChanged();
            }
        }
        private global::System.Int32 _DefaultSiteID;
        partial void OnDefaultSiteIDChanging(global::System.Int32 value);
        partial void OnDefaultSiteIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_Blog_User", "Blog")]
        public EntityCollection<Blog> Blogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_User", "Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blog>("SQL2008_615903_tegudModel.FK_Blog_User", "Blog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQL2008_615903_tegudModel", "FK_User_Site", "Site")]
        public Site Site
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("SQL2008_615903_tegudModel.FK_User_Site", "Site").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("SQL2008_615903_tegudModel.FK_User_Site", "Site").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Site> SiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("SQL2008_615903_tegudModel.FK_User_Site", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Site>("SQL2008_615903_tegudModel.FK_User_Site", "Site", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
